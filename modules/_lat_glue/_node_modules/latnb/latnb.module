<?php

function latnb_init() {
  
  $path = drupal_get_path('module', 'latnb');
  drupal_add_css("$path/css/latnb.css");
  
  //
  // For viewing notebooks
  //
  
  drupal_add_css("$path/css/views-view-latalbum-entries.css");
    
  //
  // For working with notebooks
  //
  
  $arg_path = arg(0).'/'.arg(2).'/'.arg(3);
  if ($arg_path == 'user/notebooks/images') {
    drupal_add_css("$path/css/page-notebook.css");
    drupal_add_css("$path/css/style.css");
  }
  
  //
  // For adding "image" media to notebooks
  //
  
  $arg_path = arg(0).'/'.arg(2).'/'.arg(3).'/'.arg(4);
  if ($arg_path == 'user/notebooks/images/add-items') {
    drupal_add_css("$path/css/views-view-image-thumbnails.css");
    drupal_add_css("$path/css/notebook-ui-form.css");
    drupal_add_css("$path/css/notebook-ui.css");
    drupal_add_js("$path/js/activity-ui.js");
  }

  // 
  // FOR UPLOAD PAGE
  //
  
  $args_image = arg(0).'/'.arg(2).'/'.arg(3).'/'.arg(4).'/'.arg(5);
  if ($args_image = 'user/notebooks/images/add/upload') {
    $path_image = drupal_get_path('module', 'latbasicimage');
    drupal_add_css("$path_image/css/image-upload.css");
  }
  
}

function latnb_menu() {
  $items = array(
    'user/%user_uid_optional/notebooks' => array(
      'file' => 'latnb.pages.inc',
      'title' => 'Picture books',
      'page callback' => '_latnb_page_notebooks',
      'page arguments' => array(1),
      'access callback' => 'user_edit_access',
      'access arguments' => array(1),
      'type' => MENU_NORMAL_ITEM,
      'weight' => 1,
    ),
    'user/%user_uid_optional/notebooks/images' => array(
      'file' => 'latnb.pages.inc',
      'title' => 'Picture books',
      'page callback' => '_latnb_page_notebooks_images',
      'page arguments' => array(1),
      'access callback' => 'user_edit_access',
      'access arguments' => array(1),
      'type' => MENU_NORMAL_ITEM,
      'weight' => 1,
    ),
    'user/%user/notebooks/images/manage' => array(
      'title' => 'Picture books',
      'type' => MENU_DEFAULT_LOCAL_TASK,
      'weight' => 1,
    ),
    
    // TODO: Path should be ".../attach-items"; but left for legacy code.
    'user/%user/notebooks/images/add-items' => array(
      'file' => 'latnb.pages.inc',
      'title' => 'Attach pictures',
      'page callback' => '_latnb_page_notebooks_images_add_items',
      'page arguments' => array(1),
      'access callback' => 'user_edit_access',
      'access arguments' => array(1),
      'type' => MENU_LOCAL_TASK,
      'weight' => 2,
    ),
    'user/%user/notebooks/images/add-images' => array(
      'file' => 'latnb.pages.inc',
      'title' => 'Add pictures',
      'page callback' => '_latnb_page_notebooks_images_add_images',
      'page arguments' => array(1),
      'access callback' => 'user_edit_access',
      'access arguments' => array(1),
      'type' => MENU_NORMAL_ITEM,
      'weight' => 2,
    ),
    
    'node/%node/apps' => array(
      'file' => 'latnb.pages.inc',
      'title' => 'Apps',
      'page callback' => '_latnb_page_notebook_apps',
      'page arguments' => array(1),
      'access callback' => 'latnb_notebook_app_access',
      'access arguments' => array(1),
      'type' => MENU_LOCAL_TASK,
      'weight' => 1,
    ),
    
    // CRUD
    'node/%node/image/%/detach' => array(
      'file' => 'latnb.pages.inc',
      'title' => 'Detatch image from notebook',
      'page callback' => '_latnb_page_image_detach',
      'page arguments' => array(1, 3),
      'access callback' => 'node_access',
      'access arguments' => array('update', 1),
      'type' => MENU_NORMAL_ITEM,
      'weight' => 1,
    ),
    'node/%node/image/%node/moveup' => array(
      'file' => 'latnb.pages.inc',
      'title' => 'Detatch image from notebook',
      'page callback' => '_latnb_page_image_moveup',
      'page arguments' => array(1, 3),
      'access callback' => 'node_access',
      'access arguments' => array('update', 1),
      'type' => MENU_NORMAL_ITEM,
      'weight' => 1,
    ),
    'node/%node/image/%node/movedown' => array(
      'file' => 'latnb.pages.inc',
      'title' => 'Detatch image from notebook',
      'page callback' => '_latnb_page_image_movedown',
      'page arguments' => array(1, 3),
      'access callback' => 'node_access',
      'access arguments' => array('update', 1),
      'type' => MENU_NORMAL_ITEM,
      'weight' => 1,
    ),
    
    // Deprecated menu item:
    // TODO: Remove this function in favor of "services" module.
    // TODO: Instead of "notebook/json/%node" use "node service".
    'notebook/json/%node' => array(
      'file' => 'latnb.services.inc', 
      'title' => 'Notebook as JSON',
      'page callback' => '_latnb_service_node_get',
      'page arguments' => array(2),
      'access callback' => 'latnb_service_node_access',
      'access arguments' => array('load', 2),
      'type' => MENU_CALLBACK,
    ),
    // Deprecated menu item:
    // TODO: Remove this function in favor of "services" module.
    // TODO: Instead of "lat/proces/..." use "latnb service".
    'lat/process/notebook/add/image-nodes' => array(
      'file' => 'latnb.services.inc',
      'title' => 'Add notebook item',
      'page callback' => '_latnb_service_add_image_nodes',
      'access callback' => 'latnb_service_access',
      'access arguments' => array('add image nodes to notebook'),
      'type' => MENU_CALLBACK,
    ),
  );
  
  // Combines adding pictures for: Web, Upload, Mobile, Email
  $items_add_images = array(
    // Web:
    'user/%user_uid_optional/notebooks/images/add' => array(
      'title' => 'Add pictures from Web',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('latmediaref_websearchform'),
      'access callback' => 'user_is_logged_in',
      'access arguments' => array(),
      'type' => MENU_NORMAL_ITEM,
      'menu' => 'primary-links',
      'weight' => 1,
    ),
    // Upload:
    'user/%user/notebooks/images/add/upload' => array(
      'file path' => drupal_get_path('module', 'latbasicimage'),
      'file' => 'latbasicimage.pages.inc',
      'title' => 'Computer',
      'page callback' => '_latbasicimage_page_upload',
      'page arguments' => array(1),
      'access callback' => 'node_access',
      'access arguments' => array('create', 'image'),
      'type' => MENU_LOCAL_TASK,
      'weight' => 2,
    ),
    // Mobile:
    'user/%user/notebooks/images/add/mobile' => array(
      'file path' => drupal_get_path('module', 'latmobile'),
      'file' => 'latmobile.pages.inc',    
      'title' => 'Mobile',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('latmobile_user_form', 1),
      'access callback' => 'user_edit_access',
      'access arguments' => array(1),
      'type' => MENU_LOCAL_TASK,
      'weight' => 3,
    ),
    // Default:
    'user/%user/notebooks/images/add/web' => array(
      'title' => 'Web',
      'type' => MENU_DEFAULT_LOCAL_TASK,
      'weight' => 1,
    ),
  );
  
  $items = array_merge($items_add_images, $items);
  return $items;
}

function latnb_notebook_app_access($notebook) {
  $result = TRUE;
  $result = $result && $notebook->type == 'lnt_album'; 
  $result = $result && node_access('view', $notebook);
  return $result;
}

function latnb_service() {
  $service_menu = array(
    array(
      '#method' => 'latNotebook.addImageNodes',
      '#file' => array('latnb.services.inc'),
      '#callback' => '_latnb_service_add_image_nodes',
      '#help' => t('Adds a set of "Image" nodes to a "Notebook".'),
      '#args' => array(
        array(
          '#name' => 'notebook',
          '#type' => 'string',
          '#optional' => FALSE,
          '#description' => t('The notebook to use.'),
        ),
        array(
          '#name' => 'images',
          '#type' => 'array',
          '#optional' => FALSE,
          '#description' => t('The images to the notebooks.'),
        ),
      ),
      '#return' => 'bool', 
      '#access callback' => 'latnb_service_access',
      '#access arguments' => array('add image nodes to notebook'),
    ),
  );
  return $service_menu;
}

function latnb_service_access($request, $account = NULL) {
  if ($account == NULL) {
    $account = $_GLOBALS['user'];
  }
  $permission = TRUE;
  switch ($request) {
    case 'add image nodes to notebook':
      // User can access "image" nodes (any kind) -- image, image_reference
      // User can create "image tagging" nodes    -- lnt_image
      // User can modify "notebook" nodes         -- lnt_album
      break;
    default:
      break;
  }
  return $permission;
}

// TODO: Remove this function in favor of "services" module.
function latnb_service_node_access($op, $node, $account = NULL) {
  // TODO: Find a better access handler.
  return node_access('view', $node, $account);
}

function latnb_nodeapi(&$node, $op, $a2, $a3) {
  if ($node->type == 'lnt_album') {
    switch($op) {
      case 'view':
        $is_teaser = $a2;
        $is_page = $a3;
        
        // PAGE, FULL-NODE
        if ($is_page == TRUE && $is_teaser == FALSE) {
          $node->content ['tagging_nodes_view']= array(
            '#value' => views_embed_view('latalbum_entries', 'default', $node->nid),
            //'#value' => views_embed_view('latalbum_content_view', 'default', $node->nid),
          );
          $is_missing_pictures = is_null($node->field_latimage_ref[0]['nid']);
          $is_owner = node_access('update', $node);
          if($is_owner) {
            $link_attach_images = l(
              'Picture books &rarr; Attach Pictures',
              "user/$node->uid/notebooks/images/add-items",
              array('html' => TRUE)
            );
            $link_apps = l('Apps', "node/$node->nid/apps");
            drupal_set_message("
              <p>To attach pictures, go to $link_attach_images.</p>
              <p>To view the apps, use the $link_apps tab.</p>
            ");
          }
        }
        
        // NON-PAGE, TEASER
        else if ($is_page == FALSE && $is_teaser == TRUE) {
          $node->content ['notebook_entry_images'] = array(
            '#value' => views_embed_view('latalbum_entries_teaser', 'default', $node->nid),
            '#weight' => 999,
          ); 
        }
        
        break;
      case 'alter':
        $node->body = str_replace('<fieldset></fieldset>', '', $node->body);
        break;
      default:
        break;
    }
  }
}

function latnb_form_image_node_form_alter(&$form, &$form_state) {
  $arg_path = arg(0).'/'.arg(2).'/'.arg(3).'/'.arg(4).'/'.arg(5);
  if (is_numeric(arg(1)) && $arg_path == 'user/notebooks/images/add/upload') {
    $form['#redirect'] = 'user/'.arg(1).'/notebooks/images/add-items';
  }
}

function latnb_ctools_plugin_directory($module, $plugin_type) {
  //dpm("$module: plugins/$plugin_type");
  if ($module == 'ctools' && !empty($plugin_type)) {
    return "plugins/$plugin_type";
  }
}

function latnb_activityform() {
  return array(
    'instructions' => array(
      '#value' => 'Use the form below to create new picture books.',
    ),
    'title' => array(
      '#type' => 'textfield',
      '#title' => t('Title'),
      '#maxlength' => '128',
      '#required' => TRUE,
//      '#description' => t('Enter a title.'),
    ),
    'notebook_purpose' => array(
      '#type' => 'radios',
      '#title' => t('App'),
      '#options' => array(
        'storybook' => t('Storybook'),
//        'flashcards' => t('Flashcards'),
//        'worksheet' => t('Worksheet'),
      ),
      '#default_value' => 'storybook',
      '#required' => TRUE,
      '#description' => t("Each picture book can have many applications.
        Please pick an app to start with. You can add more later."),
    ),
    'submit' => array(
      '#type' => 'submit',
      '#value' => 'Create',
    ),
    'google_ad' => array(
      '#value' => '
        <div style="height: 2em">&nbsp;</div>
        <div style="margin-left: -6px">
          <script type="text/javascript"><!--
          google_ad_client = "ca-pub-3004422950450014";
          /* Text Ad - Small Square */
          google_ad_slot = "0664443427";
          google_ad_width = 200;
          google_ad_height = 200;
          //-->
          </script>
          <script type="text/javascript"
          src="http://pagead2.googlesyndication.com/pagead/show_ads.js">
          </script>
        </div>
        ',
    )
  );
}

function latnb_activityform_submit($form, &$form_state) {
  
  // Save the notebook.
  $notebook = _lat_node_initialize('lnt_album');
  $notebook->title = $form_state['values']['title'];
  node_save($notebook);

  // Save the app.
  $app = _lat_node_initialize('latapp');
  $purpose = $form_state['values']['notebook_purpose'];
  $app->title = "$purpose app";
  $app->field_app_target_node_ref[0]['nid'] = $notebook->nid;
  $app->field_app_data[0]['value'] = $purpose;
  node_save($app);
  
}

function latnb_addtoactivityform() {
  
  $item_length = 20; 
  $recent_item_count = 200;
  
  // QUERY ACTIVITY CONTAINERS
  $activity_query = <<<EOS
    select 
      n.nid,
      n.title
    from 
      {node} n 
    where 
      n.type = '%s'
      and n.uid = %d
    order by
      n.created desc
EOS;
  $rset = db_query($activity_query, 'lnt_album', $GLOBALS['user']->uid);
  while ($row = db_fetch_object($rset)) {
    $options[$row->nid] 
      = strlen($row->title) < $item_length 
      ? $row->title 
      : substr($row->title, 0, $item_length - 3).'...';
  }

  // RECENT ACTIVITIES LIST
  $recent_collections = '';
  $recent_collections .= '<div id="recent-notebooks" class="form-item">';
  $recent_collections .= '<label for="recent-notebooks">Recent picture books:</label>';
  $recent_options = array_slice($options, 0, $recent_item_count, true);
  foreach ($recent_options as $activity_nid => $activity_name) {
    $add_link = l('attach', '#', array('attributes' => array(
      'id' => 'activity-nid-'.$activity_nid,
      'data' => $activity_nid,
      'class' => 'add-to-activity-button'
    )));
    $recent_collections .= <<<EOS
      <div><span class="label">$activity_name</span> $add_link</div>
EOS;
  }
  $recent_collections .= '</div>';
  $form['recent_collections_links'] = array(
    '#type' => 'markup',
    '#value' => $recent_collections
  );
  
  // DROP DOWN MENU
  $options = array_slice($options, $recent_item_count, count($options), TRUE);
  if (!empty($options)) {
    $option_keys = array_keys($options);
    $form['activity_list'] = array(
      '#type' => 'select',
      '#multiple' => TRUE,
      '#size' => 8,
      '#title' => t('More notebooks'),
      '#options' => $options,
      '#default_value' => $option_keys[0],
      '#required' => TRUE,
      '#description' => t('Select images, then select a notebook to add the images to.'),
    );
    $form['submit'] = array(
      '#type' => 'submit',
      '#value' => 'Add',
    );
  }
  return $form;
}

//function latnb_block($op = 'list', $delta = 0, $edit = array()) {
//  
//  $blocks[0] = array('info' => 'Notebook UI');
//  if ($op == 'view' && $delta == 0) {
//    $content = '';
//    $content .= drupal_get_form('latnb_addtoactivityform');
//    return array(
//      'subject' => 'Pictures',
//      'content' => $content 
//    );
//  }
//  
//  if ($op == 'list') {
//    return $blocks;
//  }
//  
//}

function latnb_appform(&$form_state, $notebook_nid) {
  $form_state['storage']['nid'] = $notebook_nid;
  return array(
    'notebook_purpose' => array(
      '#type' => 'radios',
      '#title' => t('Create an app'),
      '#options' => array(
        'storybook' => t('Storybook'),
//        'flashcards' => t('Flashcards'),
//        'worksheet' => t('Worksheet'),
      ),
      '#default_value' => 'storybook',
      '#required' => TRUE,
    ),
    'submit' => array(
      '#type' => 'submit',
      '#value' => 'Create app',
    )
  );
}

function latnb_appform_submit($form, &$form_state) {
  if ($form_state['storage']['nid']) {
    $notebook_nid = $form_state['storage']['nid'];
    $app = _lat_node_initialize('latapp');
    $purpose = $form_state['values']['notebook_purpose'];
    $app->title = "$purpose app";
    $app->field_app_target_node_ref[0]['nid'] = $notebook_nid;
    $app->field_app_data[0]['value'] = $purpose;
    node_save($app);
    drupal_set_message('<strong><em>App created.</em></strong>');
    drupal_goto("node/$notebook_nid");
  }
  else {
    drupal_set_message('Could not create app. NID missing.', 'error');
  }
}

function latnb_preprocess_page(&$vars) {
  //
  // For upload page
  //
  $args_image = arg(0).'/'.arg(2).'/'.arg(3).'/'.arg(4).'/'.arg(5);
  if ($args_image = 'user/notebooks/images/add/upload') {
    lat_vars_page_script_vertical_tabs_remove($vars);
  }
}

function latnb_user_media_count($account) {
  $query = "
    select
      count(*)
    from
      {node} n
    where
      n.uid = %d and
      (
        n.type = 'image' or
        n.type = 'song' or
        n.type = 'media_reference'
      )
  ";
  $rset = db_query($query, $account->uid);
  $result = db_result($rset);
  return $result;
}

function _latnb_entry_weights_load(&$notebook) {
  $query = "
    select
      n.nid as nid,
      ae.field_delta_value as delta
    from
      {node} n
      inner join {content_type_lnt_album_entry} ae on ae.nid = n.nid
      inner join {content_field_lnt_album_noderef} ar on ar.nid = n.nid
    where
      n.type = 'lnt_album_entry'
      and ar.field_lnt_album_noderef_nid = %d
    order by
      ae.field_delta_value      
  ";
  $rset = db_query($query, $notebook->nid);
  $entries = array();
  while ($row = db_fetch_object($rset)) {
    $entries []= $row;
  }
  return $entries;
}

function latnb_entry_weights_max(&$notebook) {
  $weights = _latnb_entry_weights_load($notebook);
  $weight = array_pop($weights);
  return $weight;
}

function latnb_entry_weights_min(&$notebook) {
  $weights = _latnb_entry_weights_load($notebook);
  $weight = array_shift($weights);
  return $weight;
}

/**
 * TODO: Check if $tagging_image is a node or 'nid' text value.
 * TODO: Account for null values in 
 * @param $tagging_node
 * @param $notebook
 * @param $account
 */
function latnb_entry_create($tagging_node, $notebook = NULL, $account = NULL) {
  $latalbum_entry = _lat_node_initialize('lnt_album_entry');
  $latablum_entry->uid = $GLOBALS['user']->uid;
  $latablum_entry->status = 0;
  $latalbum_entry->title = "Picture book entry";
  $latalbum_entry->field_lnt_image_noderef[0]['nid'] = $tagging_node->nid;
  node_save($latalbum_entry);
  return $latalbum_entry;
}
