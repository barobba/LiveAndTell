<?php 

function latimage_init() {
  $path = drupal_get_path('module', 'latimage');
  drupal_add_js("$path/js/latimage-toolbar.js");
}

/**
 * Implementation of hook_menu().
 */
function latimage_menu() {
  
  // TODO: Make this a menu option for "admin/build/...".
  $items = array(
    'lat/process/user/lat-image-create/%/%' => array(
      'title' => 'User Process - Create LAT Image',
      'page callback' => '_latimage_user_process_create',
      'page arguments' => array(4, 5),
      'access arguments' => array('create lnt_image content'),
    ),
//    // api/latimage/NID/TERM_NID
//    'api/latimage/%/%' => array(
//      'title' => 'Open file',
//      'page callback' => 'lnt_openfile',
//      'access callback' => TRUE, // <-- NEED TO FIGURE THIS OUT!!
//      //'access callback' => 'node_access',
//      //'access arguments' => array('view', 'lnt_image'),
//      'type' => MENU_CALLBACK
//    ),
  );
  return $items;
}

/**
 * TODO: Check $account variable to assign author.
 */
function latimage_create($method, $data, $account = NULL) {
  // TODO: ALL NODES SHOULD BE MANAGED USING API.
  $tagging = _lat_node_initialize('lnt_image');
  $tagging->uid = $GLOBALS['user']->uid;
  $tagging->status = 0;
  $tagging->title = "Tagging image";
  switch($method) {
    case 'image-nid':
    case 'image-node':
      // TODO: ALL IMAGE FILES SHOULD BE ACCESSED USING API.
      $image = node_load($data);
      if ($image) {
        
        switch($image->type) {
          case 'image':
            $tagging->field_lnt_image[0] = $image->field_image[0];
          // Drop down to default case.
          default:
            // Store the NID
            $tagging->field_abstract_image_noderef[0]['nid'] = $image->nid;
            break;
        }
        node_save($tagging);
        
      }
      else {
        // Could not load image
        // Don't save
      }
      break;
      
    case 'latimage-nid':
    case 'lnt_image-node':
    case 'tagged-image-node':
      // TODO: ALL IMAGE FILES SHOULD BE ACCESSED USING API.
      $lnt_image = node_load($data);
      if ($lnt_image) {
        $tagging->field_lnt_image[0] = $lnt_image->field_lnt_image[0];
        $image_file_fid = $lnt_image->field_lnt_image[0]['fid'];
        $tagging->title = "Tagging [fid:$image_file_fid]";
        node_save($tagging);
      }
      else {
        // Could not load image
      }
      break;
      
    case 'image-fid':
    case 'image-file':
      // TODO: ALL IMAGE FILES SHOULD BE ACCESSED USING API.
      $image_file = field_file_load($data);
      if ($image_file) {
        $tagging->field_lnt_image[0] = $image_file;
        $image_file_fid = $image_file['fid'];
        $tagging->title = "Tagging [fid:$image_file_fid]";
        node_save($tagging);
      }
      else {
        // Could not load image file
      }
      break;
    case 'image-url':
      // TBD
      break;
    default:
      // TBD
      break;
  }
  // Return results
  if (property_exists($tagging, 'nid')) {
    return $tagging;
  }
  else {
    return false;
  }
}

/**
 * LAT Image User Process Create
 * 
 * @param $method
 * @param $data
 */
function _latimage_user_process_create($method, $data) {
  $content = '';
  $tagging = latimage_create($method, $data);
  if ($tagging) {
    drupal_goto("node/$tagging->nid/add-terms");
  }
}

/**
 * Implementation of hook_nodeapi().
 * 
 * TOOLBAR BUTTONS
 *  
 * @param $node
 * @param $op
 * @param $a3
 * @param $a4
 */
function latimage_nodeapi(&$node, $op, $a3 = NULL, $a4 = NULL) {
  if ($node->type == 'lnt_image') {
    switch($op) {
      case 'presave':
        
        // Get a fresh copy of the XML data (to prevent changes)
        // THIS IS TO MAKE UP FOR THE PROBLEM THAT THIS XML DATA
        // SHOULD NOT BE IN THE NODE. IT SHOULD BE MANAGED SEPARATELY
        // FORM THE NODE. SO, WE REFRESH THE COPY.
        if (arg(0).'/'.arg(2) == 'node/edit') {
          if (!is_null($node->field_lnt_image_xml[0]['value'])) {
            $latimage_openfile_url = 'http://'.$_SERVER['HTTP_HOST']."/openfile?nid=$node->nid&format=xml";
            $latimage_openfile_data = lat_curl($latimage_openfile_url);
            //dpm($latimage_openfile_data);
            $node->field_lnt_image_xml[0]['value'] = $latimage_openfile_data;
          }
        }
        break;
        
      case 'load':

        $image = node_load($node->field_abstract_image_noderef[0]['nid']);
        $node->field_abstract_image_noderef[0]['credit'] =  $image->lat_media_credit; 
        
        // Toolbar
//        $node->toolbar['default'] = array(
//          l('More Details', $_GET['q'].'#', array('attributes' => array('class' => 'latimage-toolbar-button latimage-toolbar-button-tags', 'data' => ".toolbar-dropdown-panel-tags"))),
//          l('Embed Code', $_GET['q'].'#', array('attributes' => array('class' => 'latimage-toolbar-button latimage-toolbar-button-embed-code', 'data' => ".toolbar-dropdown-panel-embed-code")))
//        );

        break;
      case 'view':
        $is_teaser = $a3;
        $is_page = $a4;
        break;
    }
  }
}

function latimage_preprocess_node(&$vars) {
  
  $node = $vars['node'];
  if ($node->type == 'lnt_image') {
    
    // Teaser variables
    if ($vars['teaser']) {
      $img = theme(
        'imagecache',
        'thumbnail_100', 
        $node->field_lnt_image[0]['filepath'], '', '', NULL, FALSE
      );
      $vars['lat_image_thumb'] = l($img, 'node/'.$node->nid, array('html' => true));
      
      // NODE TEASER ISN'T USING THIS.
      //$vars['lat_image_terms'] = views_embed_view('lat_album_image_teaser_terms', 'default', $node->nid);      
      $vars['lat_image_terms'] = '[view: lat_album_image_teaser_terms]';
    }
    
    // Page variables
    elseif ($vars['page']) {
      
      // Remove title on image
      drupal_set_title('');
  
      // Tags variable
      $vars['lat_image_tags'] = views_embed_view('lnt_image_terms', 'default', $node->nid);
      
      // Terms variable 
      //$vars['lat_image_terms'] = views_embed_view('lnt_image_terms', 'default', $node->nid);
      
      //
      // Embed code & Printable embed code
      //
      
      $embed_code = theme('lat_image_viewer_embed_code', $node, 550, 338);
      $vars['lat_image_embed_code'] = "<div class='lnt-image-object'>$embed_code</div>";
      // Printed embed code
      $cp_embed_code = array(
        '#type' => 'fieldset',
        '#attributes' => array('class' => 'lat-image-embed-code'),
        '#title' => '<b>Embed Code</b>',
        '#value' => '<input class="lat-image-embed-code" onclick="this.focus();this.select();" value="'.htmlentities($embed_code).'" />',
        '#collapsible' => false,
        '#collapsed' => false,
        '#weight' => 6
      );
      $vars['lat_image_embed_code_copy'] = drupal_render($cp_embed_code);
      $vars['cp_embed_code'] = $vars['lat_image_embed_code_copy'];
      // Printed embed code; boxes hidden
      $embed_code_hide_boxes = theme('lat_image_viewer_embed_code', $node, 550, 338, array('boxes' => 'none'));
      $cp_embed_code_hideboxes = array(
        '#type' => 'fieldset',
        '#attributes' => array('class' => 'lat-image-embed-code hidden-boxes'),
        '#title' => '<b>Embed Code (With Boxes Hidden)</b>',
        '#value' => '<input class="lat-image-embed-code" onclick="this.focus();this.select();" value="'.htmlentities($embed_code_hide_boxes).'" />',
        '#collapsible' => false,
        '#collapsed' => false,
        '#weight' => 7
      );
      $vars['lat_image_embed_code_hideboxes'] = drupal_render($cp_embed_code_hideboxes);
      $vars['cp_embed_code_hideboxes'] = $vars['lat_image_embed_code_hideboxes'];
      
      //
      // Previous & Next buttons
      //
      
      // Get entire album
      // TODO: THIS SHOULD BE DONE WITH SQL QUERY !!!!!!!!!!!!!
      $lat_image_album_nid = $node->field_lnt_album_noderef[0]['nid'];
      $view = views_get_view('lat_album_images');
      $view->set_arguments(array($lat_image_album_nid));
      $view->execute();
      // Find my position
      foreach ($view->result as $key => $result) {
        if ($result->nid == $node->nid) {
          $lat_image_index = $key;
          break;
        }
      }
      // Previous - If I'm not the first, then show previous
      if ($lat_image_index != 0) {
        $vars['lat_image_album_previous'] = l('Previous', 'node/'.$view->result[$lat_image_index - 1]->nid); 
      }
      // Next - If I'm not the last, then show next
      if ($lat_image_index != count($view->result) - 1) {
        $vars['lat_image_album_next'] = l('Next', 'node/'.$view->result[$lat_image_index + 1]->nid); 
      }
      
    } // end if($is_page)
    
  } // end if($node->type == 'lnt_image')
}
